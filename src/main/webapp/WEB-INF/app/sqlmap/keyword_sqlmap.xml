<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Keyword">

    <resultMap type="com.wenlie.chong4.bean.Keyword" id="keyword">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="alias" property="alias"/>
        <result column="has_items" property="hasItems"/>
    </resultMap>


    <select id="getByAlias" parameterType="String" resultMap="keyword">
        SELECT id,name,alias FROM keyword
        WHERE alias = #{VALUE} limit 1
    </select>

    <select id="getNextList" parameterType="java.util.Map" resultMap="keyword">
        SELECT id,name,alias FROM keyword WHERE id>#{from} LIMIT #{limit}
    </select>

    <select id="getPrevList" parameterType="java.util.Map" resultMap="keyword">
        SELECT id,name,alias FROM keyword
        <![CDATA[
        WHERE id<#{from} ORDER BY id DESC LIMIT #{limit}
        ]]>
    </select>

    <select id="getLastKeyword" resultMap="keyword">
        SELECT id,name,alias FROM keyword ORDER BY id DESC LIMIT 1
    </select>


    <select id="getKeywordsHasNoItems" parameterType="int" resultMap="keyword">
        SELECT id,name,alias,has_items FROM keyword WHERE has_items='no'
        LIMIT #{value}
    </select>



    <select id="count" resultType="int">
        SELECT COUNT(id) FROM keyword
    </select>

    <update id="update" parameterType="keyword">
        UPDATE keyword SET name=#{name},alias=#{alias},has_items=#{hasItems}
        WHERE alias=#{alias}
    </update>

    <!--<select id="countQQ" resultType="int">
        SELECT COUNT(id) FROM qq
        <where>
            <if test="id != null and id > 0">
                id=#{id}
            </if>
            <if test="qq != null and qq != ''">
                AND qq=#{qq}
            </if>
        </where>
    </select>

    <insert id="addQQ" parameterType="qqAccount">
        INSERT INTO qq (qq,password)
        VALUES
        (
        #{qq},
        #{password}
        )
    </insert>

    <insert id="batchAddQQ">
        INSERT INTO qq (qq,password)
        VALUES

        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.qq},
            #{item.password}
            )
        </foreach>
    </insert>


    <delete id="delQQByQQNumber" parameterType="String">
        DELETE FROM qq WHERE qq=#{value}
    </delete>-->

</mapper>