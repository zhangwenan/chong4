<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
       default-autowire="byName" default-lazy-init="false">

    <bean id="topicService" class="com.wenlie.chong4.service.impl.TopicServiceImpl"></bean>
    <bean id="topicArticleService" class="com.wenlie.chong4.service.impl.TopicArticleServiceImpl"></bean>
    <bean id="tagService" class="com.wenlie.chong4.service.impl.TagServiceImpl"></bean>
    <bean id="refArticleService" class="com.wenlie.chong4.service.impl.RefArticleServiceImpl"></bean>
    <bean id="articleTagService" class="com.wenlie.chong4.service.impl.ArticleTagServiceImpl"></bean>
    <bean id="articleService" class="com.wenlie.chong4.service.impl.ArticleServiceImpl"></bean>
    <bean id="anchorService" class="com.wenlie.chong4.service.impl.AnchorServiceImpl"></bean>


    <bean name="settingContext" class="com.wenlie.chong4.bean.SettingContext"></bean>

    <!--<bean name="taokeItemJob" class="com.wenlie.chong4.job.TaokeItemJob"></bean>

    &lt;!&ndash; 定义调用对象和调用对象的方法 &ndash;&gt;
    <bean id="taokeItemDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="taokeItemJob" />
        <property name="targetMethod" value="execute" />
        &lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="taokeItemTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="taokeItemDetail" />
        </property>

        <property name="cronExpression">
            <value>0/30 * * * * ?</value>
        </property>
    </bean>-->



    <bean name="chong4ListJob" class="com.wenlie.chong4.job.Chong4ListJob"></bean>

    <bean id="chong4ListJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="chong4ListJob" />
        <property name="targetMethod" value="execute" />
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="chong4ListJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="chong4ListJobDetail" />
        </property>

        <property name="cronExpression">
            <value>0/1 * * * * ?</value>
        </property>
    </bean>


    <bean name="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">

        <property name="triggers">
            <list>
                <ref bean="chong4ListJobTrigger" />
            </list>
        </property>
        <!-- <property name="autoStartup" value="true"/>  -->
    </bean>




</beans>